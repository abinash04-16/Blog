{"remainingRequest":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue","mtime":1623648689530},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAvL2ltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7CiAgICBpbXBvcnQgc2luZ2xlQ29tbWVudCBmcm9tICcuL3NpbmdsZUNvbW1lbnQudnVlJzsKICAgIGltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgY3JlYXRlZCgpCiAgICAgICAgewogICAgICAgICAgICBheGlvcy5nZXQoIGBodHRwOi8vbG9jYWxob3N0OjMwMDAvY29tbWVudC9zaG93LyR7dGhpcy4kcm91dGUucGFyYW1zLmlkfWApLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgICAgICAgICAgY29uc3QgY29tbWVudDEgPSByZXNwb25zZS5kYXRhLmNvbW1lbnRzOwoKICAgICAgICAgICAgICAgIGNvbW1lbnQxLmZvckVhY2goKGMpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBzYW1wbGUgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRJZDogYy5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgcG9zdGVkQXQ6IGMuY3JlYXRlZF9hdCwKICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogYy5jb250ZW50LAogICAgICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiBjLnVzZXJfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIGJsb2dfaWQ6IGMuYmxvZ19pZCwKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9tYWlsOiBjLnVzZXJfbWFpbCwKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudHMudW5zaGlmdChzYW1wbGUpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pCgogICAgICAgICAgICAvKgogICAgICAgICAgICBjb25zdCBkYiA9IGZpcmViYXNlLmRhdGFiYXNlKCk7CiAgICAgICAgICAgIGNvbnN0IHJlZmVyID0gZGIucmVmKCkuY2hpbGQoJ2NvbW1lbnRzLycrIHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICAgICAgICAgIHJlZmVyLmdldCgpLnRoZW4oKHNuYXBzaG90KSA9PiB7CiAgICAgICAgICAgICAgICBzbmFwc2hvdC5mb3JFYWNoKChzbmFwKSA9PnsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2FtcGxlID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudDogc25hcC52YWwoKS5jb21tZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudElkOiBzbmFwLnZhbCgpLmNvbW1lbnRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBzbmFwLnZhbCgpLnBvc3RlZEF0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck1haWw6IHNuYXAudmFsKCkudXNlck1haWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9nSWQ6IHNuYXAudmFsKCkuYmxvZ0lkLAogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnRzLnB1c2goc2FtcGxlKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICovCiAgICAgICAgfSwKICAgICAgICBjb21wb25lbnRzOnsKICAgICAgICAgICAgc2luZ2xlQ29tbWVudAogICAgICAgIH0sCiAgICAgICAgcHJvcHM6ewogICAgICAgICAgICBibG9nX2lkOiBOdW1iZXIKICAgICAgICB9LAogICAgICAgIGRhdGEoKXsKICAgICAgICAgICAgcmV0dXJuewogICAgICAgICAgICAgICAgaW5Db21tZW50OiAnJywKICAgICAgICAgICAgICAgIGNvbW1lbnRzOltdLAogICAgICAgICAgICB9OwogICAgICAgIH0sCiAgICAgICAgbWV0aG9kczoKICAgICAgICB7CiAgICAgICAgICAgIGFkZENvbW1lbnQoKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZih0aGlzLmluQ29tbWVudCAhPT0gJycpCiAgICAgICAgICAgICAgICB7CgogICAgICAgICAgICAgICAgICAgIGF4aW9zLnBvc3QoICdodHRwOi8vbG9jYWxob3N0OjMwMDAvY29tbWVudC9hZGQnLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuaW5Db21tZW50LAogICAgICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyX2lkLAogICAgICAgICAgICAgICAgICAgICAgICB1c2VyX21haWw6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJfbWFpbCwKICAgICAgICAgICAgICAgICAgICAgICAgYmxvZ19pZDogdGhpcy5ibG9nX2lkCiAgICAgICAgICAgICAgICAgICAgICAgIH0gKS50aGVuKChyZXNwb25zZSkgPT4gCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5Db21tZW50PScnOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJldHJpdmVDb21tZW50cygpOwoKICAgICAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlbXAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wMSA9ICcnK3RlbXA7CiAgICAgICAgICAgICAgICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2NvbW1lbnRzLycrdGhpcy5pZCsnLycrdGVtcDEpLnNldCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCksCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuaW5Db21tZW50LAogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudElkOiB0ZW1wLAogICAgICAgICAgICAgICAgICAgICAgICBibG9nSWQ6IHRoaXMuaWQsCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbkNvbW1lbnQ9Jyc7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXRyaXZlQ29tbWVudHMoKTsKICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAoKICAgICAgICAgICAgcmV0cml2ZUNvbW1lbnRzKCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudHMuc3BsaWNlKDAsdGhpcy5jb21tZW50cy5sZW5ndGgpOwogICAgICAgICAgICAgICAgYXhpb3MuZ2V0KCBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2NvbW1lbnQvc2hvdy8ke3RoaXMuJHJvdXRlLnBhcmFtcy5pZH1gKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29tbWVudDEgPSByZXNwb25zZS5kYXRhLmNvbW1lbnRzOwoKICAgICAgICAgICAgICAgICAgICBjb21tZW50MS5mb3JFYWNoKChjKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNhbXBsZSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRJZDogYy5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBjLmNyZWF0ZWRfYXQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjLmNvbnRlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiBjLnVzZXJfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9nX2lkOiBjLmJsb2dfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyX21haWw6IGMudXNlcl9tYWlsLAogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnRzLnVuc2hpZnQoc2FtcGxlKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKCiAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgY29uc3QgZGIgPSBmaXJlYmFzZS5kYXRhYmFzZSgpOwogICAgICAgICAgICAgICAgY29uc3QgcmVmZXIgPSBkYi5yZWYoKS5jaGlsZCgnY29tbWVudHMvJysgdGhpcy5pZCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmlkKTsKICAgICAgICAgICAgICAgIHJlZmVyLmdldCgpLnRoZW4oKHNuYXBzaG90KSA9PiAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzbmFwc2hvdC5mb3JFYWNoKChzbmFwKSA9PgogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2FtcGxlID0KICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudDogc25hcC52YWwoKS5jb21tZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudElkOiBzbmFwLnZhbCgpLmNvbW1lbnRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBzbmFwLnZhbCgpLnBvc3RlZEF0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck1haWw6IHNuYXAudmFsKCkudXNlck1haWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9nSWQ6IHNuYXAudmFsKCkuYmxvZ0lkLAogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnRzLnB1c2goc2FtcGxlKTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coc2FtcGxlKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue"],"names":[],"mappings":"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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;oBACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAErB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAEvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;wBACpB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;4BACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;4BACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1B,CAAC;wBACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC,CAAC;gBACN,CAAC,CAAC;;;gBAGF,CAAC;gBACD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC7B;oBACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACzB;wBACI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBACb;4BACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7B,CAAC;wBACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC;gBACN,CAAC,CAAC;gBACF,CAAC;YACL;QACJ;IACJ","file":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue","sourceRoot":"","sourcesContent":["<template>\n    <h2>Comments</h2>\n        <div class=\"getComment\">\n            <input type=\"text\" placeholder=\"Enter your Comment Here\" v-model=\"inComment\" >\n            <button @click=\"addComment\" class=\"btn\">Comment</button>\n        </div>\n\n        <div class=\"allComments\" v-if=\"comments.length !== 0\">\n            <single-comment v-for=\"comment in comments\"\n            :key=\"''+comment.commentId\"\n            :id=\"''+comment.commentId\"\n            :comment=\"comment.content\"\n            :postedAt=\"comment.postedAt\"\n            :userMail=\"comment.user_mail\"></single-comment>\n        </div>\n    \n</template>\n\n<script>\n    //import firebase from 'firebase';\n    import singleComment from './singleComment.vue';\n    import axios from 'axios';\n    export default {\n        created()\n        {\n            axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                console.log(response);\n\n                const comment1 = response.data.comments;\n\n                comment1.forEach((c) => {\n                    const sample = {\n                        commentId: c.id,\n                        postedAt: c.created_at,\n                        content: c.content,\n                        user_id: c.user_id,\n                        blog_id: c.blog_id,\n                        user_mail: c.user_mail,\n                    };\n                    this.comments.unshift(sample);\n                });\n            })\n\n            /*\n            const db = firebase.database();\n            const refer = db.ref().child('comments/'+ this.$route.params.id);\n            console.log(this.$route.params.id);\n            refer.get().then((snapshot) => {\n                snapshot.forEach((snap) =>{\n                        const sample = {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                    });\n            });\n            */\n        },\n        components:{\n            singleComment\n        },\n        props:{\n            blog_id: Number\n        },\n        data(){\n            return{\n                inComment: '',\n                comments:[],\n            };\n        },\n        methods:\n        {\n            addComment()\n            {\n                if(this.inComment !== '')\n                {\n\n                    axios.post( 'http://localhost:3000/comment/add', {\n                        content: this.inComment,\n                        user_id: this.$store.state.user_id,\n                        user_mail: this.$store.state.user_mail,\n                        blog_id: this.blog_id\n                        } ).then((response) => \n                        {\n                            console.log(response);\n                        });\n                        this.inComment='';\n                        this.retriveComments();\n\n                    /*\n                    const temp = new Date().getTime();\n                    const temp1 = ''+temp;\n                    firebase.database().ref('comments/'+this.id+'/'+temp1).set({\n                        postedAt: new Date().toLocaleString(),\n                        comment: this.inComment,\n                        userMail: this.email,\n                        commentId: temp,\n                        blogId: this.id,\n                    });\n                    this.inComment='';\n                    this.retriveComments();\n                    */\n                }\n            },\n\n            retriveComments()\n            {\n                console.log(this.$route.params.id);\n                this.comments.splice(0,this.comments.length);\n                axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                    console.log(response);\n\n                    const comment1 = response.data.comments;\n\n                    comment1.forEach((c) => {\n                        const sample = {\n                            commentId: c.id,\n                            postedAt: c.created_at,\n                            content: c.content,\n                            user_id: c.user_id,\n                            blog_id: c.blog_id,\n                            user_mail: c.user_mail,\n                        };\n                        this.comments.unshift(sample);\n                    });\n                });\n\n\n                /*\n                const db = firebase.database();\n                const refer = db.ref().child('comments/'+ this.id);\n                console.log(this.id);\n                refer.get().then((snapshot) => \n                {\n                    snapshot.forEach((snap) =>\n                    {\n                        const sample =\n                        {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                        console.log(sample);\n                    });\n                });\n                */\n            }\n        }\n    }\n</script>\n<style scoped>\n.getComment\n{\n    width: 60%;\n    position: absolute;\n}\n.getComment button\n{\n    width: 10%;\n    float: right;\n    background-color: rgba(7, 118, 223, 0.966);\n    border-radius: 5px;\n    border: none;\n    font-size: 17px;\n    padding: 7px;\n}\n\n.getComment input\n{\n    width: 70%;\n    float: left;\n    font-size: 17px;\n    border-radius: 6px;\n    padding: 7px;\n    background: rgba(7, 118, 223, 0.966);\n}\n.allComments\n{\n    margin-top:100px;\n    margin-bottom: 20px;\n    border: none;\n}\n</style>\n"]}]}