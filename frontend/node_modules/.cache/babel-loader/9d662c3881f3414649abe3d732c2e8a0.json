{"remainingRequest":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/babel-loader/lib/index.js!/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/abinash/workspace/vue/project/work_on/Blog/frontend/src/components/comments/commentList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/src/components/comments/commentList.vue","mtime":1623930696126},{"path":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1623861351826},{"path":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/babel-loader/lib/index.js","mtime":1623861349776},{"path":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1623861351826},{"path":"/home/abinash/workspace/vue/project/work_on/Blog/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1623861352987}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8vaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJzsKLy9pbXBvcnQgU2luZ2xlQ29tbWVudCBmcm9tICcuL3NpbmdsZUNvbW1lbnQudnVlJzsKaW1wb3J0IG9uZUNvbW1lbnQgZnJvbSAnLi9vbmVDb21tZW50LnZ1ZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIHRoaXMucmV0cml2ZUNvbW1lbnRzKCk7CiAgICAvKgogICAgIGF4aW9zLmdldCggYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jb21tZW50L3Nob3cvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuaWR9YCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgIGNvbnN0IGNvbW1lbnQxID0gcmVzcG9uc2UuZGF0YS5jb21tZW50czsKICAgICAgICAgY29tbWVudDEuZm9yRWFjaCgoYykgPT4gewogICAgICAgICAgICBjb25zdCBzYW1wbGUgPSB7CiAgICAgICAgICAgICAgICBjb21tZW50SWQ6IGMuaWQsCiAgICAgICAgICAgICAgICBwb3N0ZWRBdDogYy5jcmVhdGVkX2F0LAogICAgICAgICAgICAgICAgY29udGVudDogYy5jb250ZW50LAogICAgICAgICAgICAgICAgdXNlcl9pZDogMiwKICAgICAgICAgICAgICAgIGJsb2dfaWQ6IGMuYmxvZ19pZAogICAgICAgICAgICB9OwogICAgICAgICAgICB0aGlzLmNvbW1lbnRzLnVuc2hpZnQoc2FtcGxlKTsKICAgICAgICB9KTsKICAgIH0pOwogICAgKi8KCiAgICAvKgogICAgY29uc3QgZGIgPSBmaXJlYmFzZS5kYXRhYmFzZSgpOwogICAgY29uc3QgcmVmZXIgPSBkYi5yZWYoKS5jaGlsZCgnY29tbWVudHMvJysgdGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICByZWZlci5nZXQoKS50aGVuKChzbmFwc2hvdCkgPT4gewogICAgICAgIHNuYXBzaG90LmZvckVhY2goKHNuYXApID0+ewogICAgICAgICAgICAgICAgY29uc3Qgc2FtcGxlID0gewogICAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IHNuYXAudmFsKCkuY29tbWVudCwKICAgICAgICAgICAgICAgICAgICBjb21tZW50SWQ6IHNuYXAudmFsKCkuY29tbWVudElkLAogICAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBzbmFwLnZhbCgpLnBvc3RlZEF0LAogICAgICAgICAgICAgICAgICAgIHVzZXJNYWlsOiBzbmFwLnZhbCgpLnVzZXJNYWlsLAogICAgICAgICAgICAgICAgICAgIGJsb2dJZDogc25hcC52YWwoKS5ibG9nSWQsCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgdGhpcy5jb21tZW50cy5wdXNoKHNhbXBsZSk7CiAgICAgICAgICAgIH0pOwogICAgfSk7CiAgICAqLwogIH0sCiAgY29tcG9uZW50czogewogICAgLy9TaW5nbGVDb21tZW50CiAgICBvbmVDb21tZW50OiBvbmVDb21tZW50CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5Db21tZW50OiAnJywKICAgICAgY29tbWVudHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWRkQ29tbWVudDogZnVuY3Rpb24gYWRkQ29tbWVudCgpIHsKICAgICAgaWYgKHRoaXMuaW5Db21tZW50ICE9PSAnJykgewogICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jb21tZW50L2FkZCcsIHsKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuaW5Db21tZW50LAogICAgICAgICAgYmxvZ19pZDogdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5pbkNvbW1lbnQgPSAnJzsKICAgICAgICB0aGlzLnJldHJpdmVDb21tZW50cygpOwogICAgICAgIC8qCiAgICAgICAgY29uc3QgdGVtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgIGNvbnN0IHRlbXAxID0gJycrdGVtcDsKICAgICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignY29tbWVudHMvJyt0aGlzLmlkKycvJyt0ZW1wMSkuc2V0KHsKICAgICAgICAgICAgcG9zdGVkQXQ6IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSwKICAgICAgICAgICAgY29tbWVudDogdGhpcy5pbkNvbW1lbnQsCiAgICAgICAgICAgIHVzZXJNYWlsOiB0aGlzLmVtYWlsLAogICAgICAgICAgICBjb21tZW50SWQ6IHRlbXAsCiAgICAgICAgICAgIGJsb2dJZDogdGhpcy5pZCwKICAgICAgICB9KTsKICAgICAgICB0aGlzLmluQ29tbWVudD0nJzsKICAgICAgICB0aGlzLnJldHJpdmVDb21tZW50cygpOwogICAgICAgICovCiAgICAgIH0KICAgIH0sCiAgICByZXRyaXZlQ29tbWVudHM6IGZ1bmN0aW9uIHJldHJpdmVDb21tZW50cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuY29tbWVudHMuc3BsaWNlKDAsIHRoaXMuY29tbWVudHMubGVuZ3RoKTsKICAgICAgYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvY29tbWVudC9zaG93LyIuY29uY2F0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIHZhciBjb21tZW50MSA9IHJlc3BvbnNlLmRhdGEuY29tbWVudHM7CiAgICAgICAgY29tbWVudDEuZm9yRWFjaChmdW5jdGlvbiAoYykgewogICAgICAgICAgdmFyIHNhbXBsZSA9IHsKICAgICAgICAgICAgaWQ6IGMuaWQsCiAgICAgICAgICAgIHVzZXJfaWQ6IGMudXNlcl9pZCwKICAgICAgICAgICAgYmxvZ19pZDogYy5ibG9nX2lkLAogICAgICAgICAgICBjcmVhdGVkQXQ6IGMuY3JlYXRlZF9hdCwKICAgICAgICAgICAgY29udGVudDogYy5jb250ZW50CiAgICAgICAgICB9OwoKICAgICAgICAgIF90aGlzLmNvbW1lbnRzLnVuc2hpZnQoc2FtcGxlKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29tbWVudHMpOwogICAgICAvKgogICAgICBjb25zdCBkYiA9IGZpcmViYXNlLmRhdGFiYXNlKCk7CiAgICAgIGNvbnN0IHJlZmVyID0gZGIucmVmKCkuY2hpbGQoJ2NvbW1lbnRzLycrIHRoaXMuaWQpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmlkKTsKICAgICAgcmVmZXIuZ2V0KCkudGhlbigoc25hcHNob3QpID0+IAogICAgICB7CiAgICAgICAgICBzbmFwc2hvdC5mb3JFYWNoKChzbmFwKSA9PgogICAgICAgICAgewogICAgICAgICAgICAgIGNvbnN0IHNhbXBsZSA9CiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBjb21tZW50OiBzbmFwLnZhbCgpLmNvbW1lbnQsCiAgICAgICAgICAgICAgICAgIGNvbW1lbnRJZDogc25hcC52YWwoKS5jb21tZW50SWQsCiAgICAgICAgICAgICAgICAgIHBvc3RlZEF0OiBzbmFwLnZhbCgpLnBvc3RlZEF0LAogICAgICAgICAgICAgICAgICB1c2VyTWFpbDogc25hcC52YWwoKS51c2VyTWFpbCwKICAgICAgICAgICAgICAgICAgYmxvZ0lkOiBzbmFwLnZhbCgpLmJsb2dJZCwKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIHRoaXMuY29tbWVudHMucHVzaChzYW1wbGUpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNhbXBsZSk7CiAgICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgICovCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/abinash/workspace/vue/project/work_on/Blog/frontend/src/components/comments/commentList.vue"],"names":[],"mappings":";;AAqBI;AACA;AACA,OAAO,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,eAAe;AACX,EAAA,OADW,qBAEX;AACI,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAA/B;AACA,SAAK,eAAL;AACA;;AAEA;AACI;;AAEA;;AAEA;AACI;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;;AAKR;AACA;AACA;AACA;AACA;AACI;AACQ;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACJ;AACR;AACA;AACH,GA1CU;AA2CX,EAAA,UAAU,EAAC;AACP;AACA,IAAA,UAAS,EAAT;AAFO,GA3CA;AA+CX,EAAA,IA/CW,kBA+CL;AACF,WAAM;AACF,MAAA,SAAS,EAAE,EADT;AAEF,MAAA,QAAQ,EAAC;AAFP,KAAN;AAIH,GApDU;AAqDX,EAAA,OAAO,EACP;AACI,IAAA,UADJ,wBAEI;AACI,UAAG,KAAK,SAAL,KAAmB,EAAtB,EACA;AAEI,QAAA,KAAK,CAAC,IAAN,CAAY,mCAAZ,EAAiD;AAAE,UAAA,OAAO,EAAE,KAAK,SAAhB;AAA2B,UAAA,OAAO,EAAE,KAAK,MAAL,CAAY,MAAZ,CAAmB;AAAvD,SAAjD;AACI,aAAK,SAAL,GAAe,EAAf;AACA,aAAK,eAAL;AAEJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACJ;AACH,KAxBL;AA0BI,IAAA,eA1BJ,6BA2BI;AAAA;;AACI,WAAK,QAAL,CAAc,MAAd,CAAqB,CAArB,EAAuB,KAAK,QAAL,CAAc,MAArC;AACA,MAAA,KAAK,CAAC,GAAN,8CAAiD,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAApE,GAA0E,IAA1E,CAA+E,UAAC,QAAD,EAAc;AACzF,QAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,YAAM,QAAO,GAAI,QAAQ,CAAC,IAAT,CAAc,QAA/B;AAEA,QAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,CAAD,EAAO;AACpB,cAAM,MAAK,GAAI;AACX,YAAA,EAAE,EAAE,CAAC,CAAC,EADK;AAEX,YAAA,OAAO,EAAE,CAAC,CAAC,OAFA;AAGX,YAAA,OAAO,EAAE,CAAC,CAAC,OAHA;AAIX,YAAA,SAAS,EAAE,CAAC,CAAC,UAJF;AAKX,YAAA,OAAO,EAAE,CAAC,CAAC;AALA,WAAf;;AAOA,UAAA,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,MAAtB;AACH,SATD;AAUH,OAdD;AAgBA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,QAAjB;AAGA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACJ;AACJ;AACA;AACJ;AArEJ;AAtDW,CAAf","sourcesContent":["<template>\n    <div>\n        <h2>Comments</h2>\n        <div class=\"getComment\">\n            <input type=\"text\" placeholder=\"Enter your Comment Here\" v-model=\"inComment\" >\n            <button @click=\"addComment\" class=\"btn\">Comment</button>\n        </div>\n            \n        <div class=\"allComments\" v-if='comments.length !== 0'>\n            <one-comment v-for=\"comment in comments\"\n            :key=\"comment.id\"\n            :id='comment.id'\n            :content=\"comment.content\"\n            :user_id=\"comment.user_id\"\n            :createdAt=\"comment.createdAt\"\n            :blog_id=\"comment.blog_id\"></one-comment>\n        </div>\n    </div>\n</template>\n\n<script>\n    //import firebase from 'firebase';\n    //import SingleComment from './singleComment.vue';\n    import oneComment from './oneComment.vue';\n    import axios from 'axios';\n    export default {\n        created()\n        {\n            console.log(this.$route.params.id);\n            this.retriveComments();\n            /*\n\n            axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                console.log(response);\n\n                const comment1 = response.data.comments;\n\n                comment1.forEach((c) => {\n                    const sample = {\n                        commentId: c.id,\n                        postedAt: c.created_at,\n                        content: c.content,\n                        user_id: 2,\n                        blog_id: c.blog_id\n                    };\n                    this.comments.unshift(sample);\n                });\n            });\n            */\n\n            /*\n            const db = firebase.database();\n            const refer = db.ref().child('comments/'+ this.$route.params.id);\n            console.log(this.$route.params.id);\n            refer.get().then((snapshot) => {\n                snapshot.forEach((snap) =>{\n                        const sample = {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                    });\n            });\n            */\n        },\n        components:{\n            //SingleComment\n            oneComment\n        },\n        data(){\n            return{\n                inComment: '',\n                comments:[],\n            };\n        },\n        methods:\n        {\n            addComment()\n            {\n                if(this.inComment !== '')\n                {\n\n                    axios.post( 'http://localhost:3000/comment/add', { content: this.inComment, blog_id: this.$route.params.id, });\n                        this.inComment='';\n                        this.retriveComments();\n\n                    /*\n                    const temp = new Date().getTime();\n                    const temp1 = ''+temp;\n                    firebase.database().ref('comments/'+this.id+'/'+temp1).set({\n                        postedAt: new Date().toLocaleString(),\n                        comment: this.inComment,\n                        userMail: this.email,\n                        commentId: temp,\n                        blogId: this.id,\n                    });\n                    this.inComment='';\n                    this.retriveComments();\n                    */\n                }\n            },\n\n            retriveComments()\n            {\n                this.comments.splice(0,this.comments.length);\n                axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                    console.log(response);\n                    const comment1 = response.data.comments;\n\n                    comment1.forEach((c) => {\n                        const sample = {\n                            id: c.id,\n                            user_id: c.user_id,\n                            blog_id: c.blog_id,\n                            createdAt: c.created_at,\n                            content: c.content,\n                        };\n                        this.comments.unshift(sample);\n                    });\n                });\n\n                console.log(this.comments);\n\n\n                /*\n                const db = firebase.database();\n                const refer = db.ref().child('comments/'+ this.id);\n                console.log(this.id);\n                refer.get().then((snapshot) => \n                {\n                    snapshot.forEach((snap) =>\n                    {\n                        const sample =\n                        {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                        console.log(sample);\n                    });\n                });\n                */\n            }\n        }\n    }\n</script>\n<style scoped>\n.getComment\n{\n    width: 60%;\n    position: absolute;\n}\n.getComment button\n{\n    width: 10%;\n    float: right;\n    background-color: rgba(7, 118, 223, 0.966);\n    border-radius: 5px;\n    border: none;\n    font-size: 17px;\n    padding: 7px;\n}\n\n.getComment input\n{\n    width: 70%;\n    float: left;\n    font-size: 17px;\n    border-radius: 6px;\n    padding: 7px;\n    background: rgba(7, 118, 223, 0.966);\n}\n.allComments\n{\n    margin-top:100px;\n    margin-bottom: 20px;\n    border: none;\n}\n</style>\n"],"sourceRoot":""}]}