{"remainingRequest":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/babel-loader/lib/index.js!/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue","mtime":1623648689530},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJzsKaW1wb3J0IHNpbmdsZUNvbW1lbnQgZnJvbSAnLi9zaW5nbGVDb21tZW50LnZ1ZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jb21tZW50L3Nob3cvIi5jb25jYXQodGhpcy4kcm91dGUucGFyYW1zLmlkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICB2YXIgY29tbWVudDEgPSByZXNwb25zZS5kYXRhLmNvbW1lbnRzOwogICAgICBjb21tZW50MS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgdmFyIHNhbXBsZSA9IHsKICAgICAgICAgIGNvbW1lbnRJZDogYy5pZCwKICAgICAgICAgIHBvc3RlZEF0OiBjLmNyZWF0ZWRfYXQsCiAgICAgICAgICBjb250ZW50OiBjLmNvbnRlbnQsCiAgICAgICAgICB1c2VyX2lkOiBjLnVzZXJfaWQsCiAgICAgICAgICBibG9nX2lkOiBjLmJsb2dfaWQsCiAgICAgICAgICB1c2VyX21haWw6IGMudXNlcl9tYWlsCiAgICAgICAgfTsKCiAgICAgICAgX3RoaXMuY29tbWVudHMudW5zaGlmdChzYW1wbGUpOwogICAgICB9KTsKICAgIH0pOwogICAgLyoKICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIGNvbnN0IHJlZmVyID0gZGIucmVmKCkuY2hpbGQoJ2NvbW1lbnRzLycrIHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICBjb25zb2xlLmxvZyh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOwogICAgcmVmZXIuZ2V0KCkudGhlbigoc25hcHNob3QpID0+IHsKICAgICAgICBzbmFwc2hvdC5mb3JFYWNoKChzbmFwKSA9PnsKICAgICAgICAgICAgICAgIGNvbnN0IHNhbXBsZSA9IHsKICAgICAgICAgICAgICAgICAgICBjb21tZW50OiBzbmFwLnZhbCgpLmNvbW1lbnQsCiAgICAgICAgICAgICAgICAgICAgY29tbWVudElkOiBzbmFwLnZhbCgpLmNvbW1lbnRJZCwKICAgICAgICAgICAgICAgICAgICBwb3N0ZWRBdDogc25hcC52YWwoKS5wb3N0ZWRBdCwKICAgICAgICAgICAgICAgICAgICB1c2VyTWFpbDogc25hcC52YWwoKS51c2VyTWFpbCwKICAgICAgICAgICAgICAgICAgICBibG9nSWQ6IHNuYXAudmFsKCkuYmxvZ0lkLAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudHMucHVzaChzYW1wbGUpOwogICAgICAgICAgICB9KTsKICAgIH0pOwogICAgKi8KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHNpbmdsZUNvbW1lbnQ6IHNpbmdsZUNvbW1lbnQKICB9LAogIHByb3BzOiB7CiAgICBibG9nX2lkOiBOdW1iZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbkNvbW1lbnQ6ICcnLAogICAgICBjb21tZW50czogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRDb21tZW50OiBmdW5jdGlvbiBhZGRDb21tZW50KCkgewogICAgICBpZiAodGhpcy5pbkNvbW1lbnQgIT09ICcnKSB7CiAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2NvbW1lbnQvYWRkJywgewogICAgICAgICAgY29udGVudDogdGhpcy5pbkNvbW1lbnQsCiAgICAgICAgICB1c2VyX2lkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyX2lkLAogICAgICAgICAgdXNlcl9tYWlsOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyX21haWwsCiAgICAgICAgICBibG9nX2lkOiB0aGlzLmJsb2dfaWQKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuaW5Db21tZW50ID0gJyc7CiAgICAgICAgdGhpcy5yZXRyaXZlQ29tbWVudHMoKTsKICAgICAgICAvKgogICAgICAgIGNvbnN0IHRlbXAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICBjb25zdCB0ZW1wMSA9ICcnK3RlbXA7CiAgICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ2NvbW1lbnRzLycrdGhpcy5pZCsnLycrdGVtcDEpLnNldCh7CiAgICAgICAgICAgIHBvc3RlZEF0OiBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCksCiAgICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuaW5Db21tZW50LAogICAgICAgICAgICB1c2VyTWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgY29tbWVudElkOiB0ZW1wLAogICAgICAgICAgICBibG9nSWQ6IHRoaXMuaWQsCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5pbkNvbW1lbnQ9Jyc7CiAgICAgICAgdGhpcy5yZXRyaXZlQ29tbWVudHMoKTsKICAgICAgICAqLwogICAgICB9CiAgICB9LAogICAgcmV0cml2ZUNvbW1lbnRzOiBmdW5jdGlvbiByZXRyaXZlQ29tbWVudHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgICAgdGhpcy5jb21tZW50cy5zcGxpY2UoMCwgdGhpcy5jb21tZW50cy5sZW5ndGgpOwogICAgICBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jb21tZW50L3Nob3cvIi5jb25jYXQodGhpcy4kcm91dGUucGFyYW1zLmlkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgdmFyIGNvbW1lbnQxID0gcmVzcG9uc2UuZGF0YS5jb21tZW50czsKICAgICAgICBjb21tZW50MS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICB2YXIgc2FtcGxlID0gewogICAgICAgICAgICBjb21tZW50SWQ6IGMuaWQsCiAgICAgICAgICAgIHBvc3RlZEF0OiBjLmNyZWF0ZWRfYXQsCiAgICAgICAgICAgIGNvbnRlbnQ6IGMuY29udGVudCwKICAgICAgICAgICAgdXNlcl9pZDogYy51c2VyX2lkLAogICAgICAgICAgICBibG9nX2lkOiBjLmJsb2dfaWQsCiAgICAgICAgICAgIHVzZXJfbWFpbDogYy51c2VyX21haWwKICAgICAgICAgIH07CgogICAgICAgICAgX3RoaXMyLmNvbW1lbnRzLnVuc2hpZnQoc2FtcGxlKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIC8qCiAgICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgICAgY29uc3QgcmVmZXIgPSBkYi5yZWYoKS5jaGlsZCgnY29tbWVudHMvJysgdGhpcy5pZCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuaWQpOwogICAgICByZWZlci5nZXQoKS50aGVuKChzbmFwc2hvdCkgPT4gCiAgICAgIHsKICAgICAgICAgIHNuYXBzaG90LmZvckVhY2goKHNuYXApID0+CiAgICAgICAgICB7CiAgICAgICAgICAgICAgY29uc3Qgc2FtcGxlID0KICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IHNuYXAudmFsKCkuY29tbWVudCwKICAgICAgICAgICAgICAgICAgY29tbWVudElkOiBzbmFwLnZhbCgpLmNvbW1lbnRJZCwKICAgICAgICAgICAgICAgICAgcG9zdGVkQXQ6IHNuYXAudmFsKCkucG9zdGVkQXQsCiAgICAgICAgICAgICAgICAgIHVzZXJNYWlsOiBzbmFwLnZhbCgpLnVzZXJNYWlsLAogICAgICAgICAgICAgICAgICBibG9nSWQ6IHNuYXAudmFsKCkuYmxvZ0lkLAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgdGhpcy5jb21tZW50cy5wdXNoKHNhbXBsZSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coc2FtcGxlKTsKICAgICAgICAgIH0pOwogICAgICB9KTsKICAgICAgKi8KICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/abinash/workspace/vue/project/RailsAndVue2/blogs1/src/components/comments/commentList.vue"],"names":[],"mappings":";;;AAmBI;AACA,OAAO,aAAP,MAA0B,qBAA1B;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,eAAe;AACX,EAAA,OADW,qBAEX;AAAA;;AACI,IAAA,KAAK,CAAC,GAAN,8CAAiD,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAApE,GAA0E,IAA1E,CAA+E,UAAC,QAAD,EAAc;AACzF,MAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAEA,UAAM,QAAO,GAAI,QAAQ,CAAC,IAAT,CAAc,QAA/B;AAEA,MAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,CAAD,EAAO;AACpB,YAAM,MAAK,GAAI;AACX,UAAA,SAAS,EAAE,CAAC,CAAC,EADF;AAEX,UAAA,QAAQ,EAAE,CAAC,CAAC,UAFD;AAGX,UAAA,OAAO,EAAE,CAAC,CAAC,OAHA;AAIX,UAAA,OAAO,EAAE,CAAC,CAAC,OAJA;AAKX,UAAA,OAAO,EAAE,CAAC,CAAC,OALA;AAMX,UAAA,SAAS,EAAE,CAAC,CAAC;AANF,SAAf;;AAQA,QAAA,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,MAAtB;AACH,OAVD;AAWH,KAhBD;AAkBA;AACA;AACA;AACA;AACA;AACI;AACQ;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACJ;AACR;AACA;AACH,GAtCU;AAuCX,EAAA,UAAU,EAAC;AACP,IAAA,aAAY,EAAZ;AADO,GAvCA;AA0CX,EAAA,KAAK,EAAC;AACF,IAAA,OAAO,EAAE;AADP,GA1CK;AA6CX,EAAA,IA7CW,kBA6CL;AACF,WAAM;AACF,MAAA,SAAS,EAAE,EADT;AAEF,MAAA,QAAQ,EAAC;AAFP,KAAN;AAIH,GAlDU;AAmDX,EAAA,OAAO,EACP;AACI,IAAA,UADJ,wBAEI;AACI,UAAG,KAAK,SAAL,KAAmB,EAAtB,EACA;AAEI,QAAA,KAAK,CAAC,IAAN,CAAY,mCAAZ,EAAiD;AAC7C,UAAA,OAAO,EAAE,KAAK,SAD+B;AAE7C,UAAA,OAAO,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAFkB;AAG7C,UAAA,SAAS,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,SAHgB;AAI7C,UAAA,OAAO,EAAE,KAAK;AAJ+B,SAAjD,EAKQ,IALR,CAKa,UAAC,QAAD,EACT;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACH,SARL;AASI,aAAK,SAAL,GAAe,EAAf;AACA,aAAK,eAAL;AAEJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACJ;AACH,KAhCL;AAkCI,IAAA,eAlCJ,6BAmCI;AAAA;;AACI,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAA/B;AACA,WAAK,QAAL,CAAc,MAAd,CAAqB,CAArB,EAAuB,KAAK,QAAL,CAAc,MAArC;AACA,MAAA,KAAK,CAAC,GAAN,8CAAiD,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAApE,GAA0E,IAA1E,CAA+E,UAAC,QAAD,EAAc;AACzF,QAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAEA,YAAM,QAAO,GAAI,QAAQ,CAAC,IAAT,CAAc,QAA/B;AAEA,QAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,CAAD,EAAO;AACpB,cAAM,MAAK,GAAI;AACX,YAAA,SAAS,EAAE,CAAC,CAAC,EADF;AAEX,YAAA,QAAQ,EAAE,CAAC,CAAC,UAFD;AAGX,YAAA,OAAO,EAAE,CAAC,CAAC,OAHA;AAIX,YAAA,OAAO,EAAE,CAAC,CAAC,OAJA;AAKX,YAAA,OAAO,EAAE,CAAC,CAAC,OALA;AAMX,YAAA,SAAS,EAAE,CAAC,CAAC;AANF,WAAf;;AAQA,UAAA,MAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,MAAtB;AACH,SAVD;AAWH,OAhBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACJ;AACJ;AACA;AACJ;AA9EJ;AApDW,CAAf","sourcesContent":["<template>\n    <h2>Comments</h2>\n        <div class=\"getComment\">\n            <input type=\"text\" placeholder=\"Enter your Comment Here\" v-model=\"inComment\" >\n            <button @click=\"addComment\" class=\"btn\">Comment</button>\n        </div>\n\n        <div class=\"allComments\" v-if=\"comments.length !== 0\">\n            <single-comment v-for=\"comment in comments\"\n            :key=\"''+comment.commentId\"\n            :id=\"''+comment.commentId\"\n            :comment=\"comment.content\"\n            :postedAt=\"comment.postedAt\"\n            :userMail=\"comment.user_mail\"></single-comment>\n        </div>\n    \n</template>\n\n<script>\n    //import firebase from 'firebase';\n    import singleComment from './singleComment.vue';\n    import axios from 'axios';\n    export default {\n        created()\n        {\n            axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                console.log(response);\n\n                const comment1 = response.data.comments;\n\n                comment1.forEach((c) => {\n                    const sample = {\n                        commentId: c.id,\n                        postedAt: c.created_at,\n                        content: c.content,\n                        user_id: c.user_id,\n                        blog_id: c.blog_id,\n                        user_mail: c.user_mail,\n                    };\n                    this.comments.unshift(sample);\n                });\n            })\n\n            /*\n            const db = firebase.database();\n            const refer = db.ref().child('comments/'+ this.$route.params.id);\n            console.log(this.$route.params.id);\n            refer.get().then((snapshot) => {\n                snapshot.forEach((snap) =>{\n                        const sample = {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                    });\n            });\n            */\n        },\n        components:{\n            singleComment\n        },\n        props:{\n            blog_id: Number\n        },\n        data(){\n            return{\n                inComment: '',\n                comments:[],\n            };\n        },\n        methods:\n        {\n            addComment()\n            {\n                if(this.inComment !== '')\n                {\n\n                    axios.post( 'http://localhost:3000/comment/add', {\n                        content: this.inComment,\n                        user_id: this.$store.state.user_id,\n                        user_mail: this.$store.state.user_mail,\n                        blog_id: this.blog_id\n                        } ).then((response) => \n                        {\n                            console.log(response);\n                        });\n                        this.inComment='';\n                        this.retriveComments();\n\n                    /*\n                    const temp = new Date().getTime();\n                    const temp1 = ''+temp;\n                    firebase.database().ref('comments/'+this.id+'/'+temp1).set({\n                        postedAt: new Date().toLocaleString(),\n                        comment: this.inComment,\n                        userMail: this.email,\n                        commentId: temp,\n                        blogId: this.id,\n                    });\n                    this.inComment='';\n                    this.retriveComments();\n                    */\n                }\n            },\n\n            retriveComments()\n            {\n                console.log(this.$route.params.id);\n                this.comments.splice(0,this.comments.length);\n                axios.get( `http://localhost:3000/comment/show/${this.$route.params.id}`).then((response) => {\n                    console.log(response);\n\n                    const comment1 = response.data.comments;\n\n                    comment1.forEach((c) => {\n                        const sample = {\n                            commentId: c.id,\n                            postedAt: c.created_at,\n                            content: c.content,\n                            user_id: c.user_id,\n                            blog_id: c.blog_id,\n                            user_mail: c.user_mail,\n                        };\n                        this.comments.unshift(sample);\n                    });\n                });\n\n\n                /*\n                const db = firebase.database();\n                const refer = db.ref().child('comments/'+ this.id);\n                console.log(this.id);\n                refer.get().then((snapshot) => \n                {\n                    snapshot.forEach((snap) =>\n                    {\n                        const sample =\n                        {\n                            comment: snap.val().comment,\n                            commentId: snap.val().commentId,\n                            postedAt: snap.val().postedAt,\n                            userMail: snap.val().userMail,\n                            blogId: snap.val().blogId,\n                        };\n                        this.comments.push(sample);\n                        console.log(sample);\n                    });\n                });\n                */\n            }\n        }\n    }\n</script>\n<style scoped>\n.getComment\n{\n    width: 60%;\n    position: absolute;\n}\n.getComment button\n{\n    width: 10%;\n    float: right;\n    background-color: rgba(7, 118, 223, 0.966);\n    border-radius: 5px;\n    border: none;\n    font-size: 17px;\n    padding: 7px;\n}\n\n.getComment input\n{\n    width: 70%;\n    float: left;\n    font-size: 17px;\n    border-radius: 6px;\n    padding: 7px;\n    background: rgba(7, 118, 223, 0.966);\n}\n.allComments\n{\n    margin-top:100px;\n    margin-bottom: 20px;\n    border: none;\n}\n</style>\n"],"sourceRoot":""}]}